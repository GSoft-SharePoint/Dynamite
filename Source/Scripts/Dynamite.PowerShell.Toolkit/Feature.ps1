#
# Module 'Dynamite.PowerShell.Toolkit'
# Generated by: GSoft, Team Dynamite.
# Generated on: 10/24/2013
# > GSoft & Dynamite : http://www.gsoft.com
# > Dynamite Github : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
# > Documentation : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
#

<#
	.SYNOPSIS
		Toggle the features on a Site Collection level. 

	.DESCRIPTION
		Toggle the features on a Site Collection level. 

    --------------------------------------------------------------------------------------
    Module 'Dynamite.PowerShell.Toolkit'
    by: GSoft, Team Dynamite.
    > GSoft & Dynamite : http://www.gsoft.com
    > Dynamite Github : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
    > Documentation : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
    --------------------------------------------------------------------------------------
    
	.PARAMETER  xmlinput
		The path of a XML file (schema defines in NOTES)

	.PARAMETER  state
		$true = enable feature
    $false = disable feature

	.EXAMPLE
		PS C:\> Initialize-DSPSiteCollectionsFeatures "c:\features.xml" $true

	.INPUTS
		System.String,System.Boolean

	.NOTES
		Here is the XML schema
    
<Configuration>
  <Sites>
    <Site Url="http://myServer/mySiteCollection">
      <Feature GUID="12345678-350a-421b-bd8a-0b688956f183" Name="My first feature"/>
      <Feature GUID="12345678-a710-473a-af3c-08d49ad2e0b4" Name="My second feature"/>
      <Webs>
        <AllWebs>
          <Feature GUID="12345678-566b-4233-ad7b-722518a94170" Name="My third feature"/>
        </AllWebs>
      </Webs>
    </Site>
  </Sites>
</Configuration>
    
  .LINK
    GSoft, Team Dynamite on Github
    > https://github.com/GSoft-SharePoint
    
    Dynamite PowerShell Toolkit on Github
    > https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
    
    Documentation
    > https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
    
#>
function Initialize-DSPSiteCollectionsFeatures()
{
	Param(
		[Parameter(Mandatory=$true, ValueFromPipeline=$true)]
		[xml]$xmlinput,
		
		[Parameter(Mandatory=$true, ValueFromPipeline=$true)]
		$state
	)

	Write "Process site collection features..." 

	foreach ($Site in $xmlinput.Configuration.Sites.Site)
	{
		$SiteUrl = $Site.Url
		$spSite = Get-SPSite -Identity $Site.Url
		if($spSite -ne $null)
		{
			foreach ($Feature in $Site.Feature)
			{
				if(!($Feature.GUID -eq $null))
				{      			
					$FeatureName = $Feature.Name
					$SiteUrl = $Site.Url
										
					if($state -eq $true)
					{
						Write "Activating site feature $FeatureName on site $SiteUrl" 
						Enable-SPFeature -Identity $Feature.GUID -Url $Site.Url -Force:$true
					}
					else
					{
						$spFeature = $spSite.Features[$Feature.GUID]
						
						if($spFeature -ne $null)
						{
						  Write "Deactivating site feature $FeatureName on site $SiteUrl" 
							Disable-SPFeature -Identity $Feature.GUID -Url $Site.Url -Force:$true -Confirm:$false
						}
						else
						{
							Write-Warning "Feature $FeatureName is already disabled on site $SiteUrl" 
						} 					
					}	
				}
			}
		}
		else
		{
		  Write-Warning "Site collection $SiteUrl doesn't exist" 
		}
	}	
}

<#
	.SYNOPSIS
		Toggle the features on a AllWebs (of a Site Collection) level. 

	.DESCRIPTION
		Toggle the features on a AllWebs (of a Site Collection) level. 

    --------------------------------------------------------------------------------------
    Module 'Dynamite.PowerShell.Toolkit'
    by: GSoft, Team Dynamite.
    > GSoft & Dynamite : http://www.gsoft.com
    > Dynamite Github : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
    > Documentation : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
    --------------------------------------------------------------------------------------
    
	.PARAMETER  xmlinput
		The path of a XML file (schema defines in NOTES)

	.PARAMETER  state
		$true = enable feature
    $false = disable feature

	.EXAMPLE
		PS C:\> Initialize-DSPSiteAllWebsFeatures "c:\features.xml" $true

	.INPUTS
		System.String,System.Boolean

	.NOTES
		Here is the XML schema
    
<Configuration>
  <Sites>
    <Site Url="http://myServer/mySiteCollection">
      <Feature GUID="12345678-350a-421b-bd8a-0b688956f183" Name="My first feature"/>
      <Feature GUID="12345678-a710-473a-af3c-08d49ad2e0b4" Name="My second feature"/>
      <Webs>
        <AllWebs>
          <Feature GUID="12345678-566b-4233-ad7b-722518a94170" Name="My third feature"/>
        </AllWebs>
      </Webs>
    </Site>
  </Sites>
</Configuration>
    
  .LINK
    GSoft, Team Dynamite on Github
    > https://github.com/GSoft-SharePoint
    
    Dynamite PowerShell Toolkit on Github
    > https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
    
    Documentation
    > https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
    
#>
Function Initialize-DSPSiteAllWebsFeatures()
{
	Param(
		[Parameter(Mandatory=$true, ValueFromPipeline=$true)]
		[xml]$xmlinput,
		
		[Parameter(Mandatory=$true, ValueFromPipeline=$true)]
		$state
	)

  Write "Process webs features..." 

	foreach ($Site in $xmlinput.Configuration.Sites.Site)
	{
		$SiteUrl = $Site.Url
		$spSite = Get-SPSite -Identity $Site.Url
		if($spSite -ne $null)
		{
		  # AllWebs
			foreach ($Feature in $Site.Webs.AllWebs.Feature)
			{
				if(!($Feature.GUID -eq $null))
				{
					$FeatureName = $Feature.Name
					$WebUrl = $Web.Url
				
					foreach($Web in $spSite.AllWebs)
					{
					  if($state -eq $true)
						{
							Write "`tActivating web feature $FeatureName on site $WebUrl" 
							Enable-SPFeature -Identity $Feature.GUID -Url $Web.Url -Force:$true
						}
						else
						{
							$f = $Web.Features[$Feature.GUID]
							if($f -ne $null)
							{
								Write "`tDeactivating web feature $FeatureNamee on site $WebUrl" 
							Disable-SPFeature -Identity $Feature.GUID -Url $Web.Url -Force:$true -Confirm:$false
							}
							else
							{
								Write-Warning "`tFeature $FeatureName is already disabled on site $WebUrl" 
							} 					
						}
					}
				}
			}     
		}
		else
		{
		  Write-Warning "Site collection $SiteUrl doesn't exist"
		}
	} 	
}

<#
	.SYNOPSIS
		Toggle the features on specific webs (of a Site Collection) level. 

	.DESCRIPTION
		Toggle the features on specific webs (of a Site Collection) level. 

    --------------------------------------------------------------------------------------
    Module 'Dynamite.PowerShell.Toolkit'
    by: GSoft, Team Dynamite.
    > GSoft & Dynamite : http://www.gsoft.com
    > Dynamite Github : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
    > Documentation : https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
    --------------------------------------------------------------------------------------
    
	.PARAMETER  xmlinput
		The path of a XML file (schema defines in NOTES)

	.PARAMETER  state
		$true = enable feature
    $false = disable feature

	.EXAMPLE
		PS C:\> Initialize-DSPSiteAllWebsFeatures "c:\features.xml" $true

	.INPUTS
		System.String,System.Boolean

	.NOTES
		Here is the XML schema
    
<Configuration>
  <Sites>
    <Site Url="http://myServer/mySiteCollection">
      <Feature GUID="12345678-350a-421b-bd8a-0b688956f183" Name="My first feature"/>
      <Feature GUID="12345678-a710-473a-af3c-08d49ad2e0b4" Name="My second feature"/>
      <Webs>
        <AllWebs>
          <Feature GUID="12345678-566b-4233-ad7b-722518a94170" Name="My third feature"/>
        </AllWebs>
      </Webs>
    </Site>
  </Sites>
</Configuration>
    
  .LINK
    GSoft, Team Dynamite on Github
    > https://github.com/GSoft-SharePoint
    
    Dynamite PowerShell Toolkit on Github
    > https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit
    
    Documentation
    > https://github.com/GSoft-SharePoint/Dynamite-PowerShell-Toolkit/wiki
    
#>
Function Initialize-DSPWebFeatures()
{

	Param(
		[Parameter(Mandatory=$true, ValueFromPipeline=$true)]
		[xml]$xmlinput,
		
		[Parameter(Mandatory=$true, ValueFromPipeline=$true)]
		$state
	)
	
	Write "Process specific webs features..." 

	foreach ($Site in $xmlinput.Configuration.Sites.Site)
	{
		$SiteUrl = $Site.Url
		$spSite = Get-SPSite -Identity $Site.Url
		if($spSite -ne $null)
		{
		  foreach ($web in $Site.Webs.Web)
		  {
			$spWeb = Get-SPWeb $web.Url -ErrorAction SilentlyContinue
			$exists = ($spWeb) -ne $null
			
			if($exists -eq $true)
			{
			  foreach($Feature in $web.Feature)
			  {
				if(!($Feature.GUID -eq $null))
				{
					$FeatureName = $Feature.Name
					$WebUrl = $web.Url
					
					if($state -eq $true)
					{
						Write "`tActivating web feature $FeatureName on site $WebUrl" 
						Enable-SPFeature -Identity $Feature.GUID -Url $web.Url -Force:$true
					}
					else
					{
						$f = $spWeb.Features[$Feature.GUID]
						if($f -ne $null)
						{
							Write "`tDeactivating web feature $FeatureName on site $WebUrl" 
							Disable-SPFeature -Identity $Feature.GUID -Url $web.Url -Force:$true -Confirm:$false
						}
						else
						{
							Write-Warning "`tFeature $FeatureName is already disabled on site $WebUrl"
						} 					
					}
				}
			  }
			}
		  }     
		}
		else
		{
		  Write-Warning "Site collection $SiteUrl doesn't exist"
		}
	}
}